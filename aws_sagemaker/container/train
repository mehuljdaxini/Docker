#!/usr/bin/env python3
import numpy as np
import tensorflow as tf
import random as rn

## Set up random seed and session to reproduce the results
np.random.seed(42)
rn.seed(42)
tf.set_random_seed(1111)

import sys
import time
from datetime import datetime
import json
import os
import boto3
import io
from tensorflow import keras

## Importing hyperparameters
with open('/opt/ml/input/config/hyperparameters.json') as json_file:
    hyperparameters = json.load(json_file)
    print(hyperparameters)

## Loading dataset
fashion_mnist = keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()
train_images = train_images / 255.0
test_images = test_images / 255.0

## Setting up model
model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(128, activation=tf.nn.relu),
    keras.layers.Dense(10, activation=tf.nn.softmax)
])

## Model training
model.compile(optimizer='adam', 
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=int(hyperparameters['num_of_epochs']))

## Checking final model metrics
test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Test set accuracy:', test_acc)

# Saving the model
model.save('/opt/ml/model/pipelineSagemakerModel.h5')
sys.exit(0)
